package com.simple.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.simple.command.BoardVO;

@Repository("boardDAO")
public class BoardDAOImpl implements BoardDAO {
	
	@Autowired
	DataSource ds;
	
	@Override
	public void boardRegist(BoardVO vo) {
		
		//insert
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		String sql = "insert into board values(board_seq.nextval, ?, ?, ?, ?)";
		
		try {
			conn = ds.getConnection();
			
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, vo.getName());
			pstmt.setString(2, vo.getTitle());
			pstmt.setString(3, vo.getContent());
			
			pstmt.executeUpdate(); //성공시  1, 실패시 0 반환
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(conn != null) conn.close();
				if(pstmt != null) pstmt.close(); 
			} catch (Exception e2) {
				
			}
		}
		
	}



	@Override
	public ArrayList<BoardVO> getList() {
		
		ArrayList<BoardVO> list = new ArrayList<>();
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		String sql = "select * from board";
		
		try {
			conn = ds.getConnection();
			
			pstmt = conn.prepareStatement(sql);
			
			rs = pstmt.executeQuery();
			
			while (rs.next()) {
				
				String name = rs.getString("name");
				String title = rs.getString("title");
				String content = rs.getString("content");
				
				BoardVO vo = new BoardVO(name, title, content);
				list.add(vo);
				
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(conn != null) conn.close();
				if(pstmt != null) pstmt.close();
				if(rs != null) rs.close();
				
			} catch (Exception e2) {
				// TODO: handle exception
			}
		}
		
		return list;
	}



	@Override
	public void boardDelete(int bno) {
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		String sql = "delete from board where bno = ?";
		
		try {
			conn = ds.getConnection();
			
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, bno);
			
			pstmt.executeUpdate();
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(conn != null) conn.close();
				if(pstmt != null) pstmt.close();
			} catch (Exception e2) {
				// TODO: handle exception
			}
		}
		
	}
	
	
	
	/*
	// 리스트(데이터베이스 대체)
	ArrayList<BoardVO> list = new ArrayList<>();

	@Override
	public void boardRegist(BoardVO vo) {
		// 데이터 연결
		list.add(vo);
	}

	@Override
	public ArrayList<BoardVO> getList() {
		return list;
	}

	@Override
	public void boardDelete(int num) {
		list.remove(num); //삭제
	}
	*/
	
}
